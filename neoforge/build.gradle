plugins {
    id("net.neoforged.gradle.userdev") version("${userdev_version}")
}

base {
    archivesName = "${mod_name}-NeoForge-${minecraft_version}"
}

dependencies {
    compileOnly(project(":common"))
    implementation("net.neoforged:neoforge:${neoforge_version}")

    compileOnly("io.github.llamalad7:mixinextras-neoforge:${mixinextras_version}")
    annotationProcessor("io.github.llamalad7:mixinextras-neoforge:${mixinextras_version}")

    implementation("maven.modrinth:NcUtCpym:${xwm_version_neoforge}")
}

// Temporary workaround for a NeoGradle bug
tasks.named("test").configure {
    enabled = false
}

if (file("src/main/resources/META-INF/accesstransformer.cfg").exists()) {
    minecraft.accessTransformers.file(file("src/main/resources/META-INF/accesstransformer.cfg"))
}

Spec<Task> notNeoTask = { Task it -> !it.name.startsWith("neo") } as Spec<Task>

tasks.withType(JavaCompile).matching(notNeoTask).configureEach {
    source(project(":common").sourceSets.main.allSource)
}
tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}
tasks.withType(ProcessResources).matching(notNeoTask).configureEach {
    from project(":common").sourceSets.main.resources
}
